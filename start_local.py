#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
"""

import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ PATH
project_dir = Path(__file__).parent
sys.path.insert(0, str(project_dir))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
os.environ.setdefault('DATABASE_URL', 'sqlite:///network_monitor.db')
os.environ.setdefault('SESSION_SECRET', 'NetMon_K7x9P2mQ8vL4nR6tY3uI1oE5wZ0sA7bG9dF2hJ4kM8pN6qV3xC1yB5nU')
os.environ.setdefault('FLASK_ENV', 'development')
os.environ.setdefault('FLASK_DEBUG', 'true')

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
try:
    from app import app, socketio
    from services.network_service import NetworkService
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:")
    print("   pip install -r requirements.txt")
    sys.exit(1)

def select_interface():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤—ã–±–æ—Ä —Å–µ—Ç–µ–≤–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
    try:
        network_service = NetworkService()
        interfaces = network_service.detect_network_interfaces()
        
        if not interfaces:
            print("‚ùå –°–µ—Ç–µ–≤—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return "0.0.0.0"
        
        print("\nüåê –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ç–µ–≤—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:")
        print("=" * 60)
        for i, interface in enumerate(interfaces, 1):
            print(f"{i}. {interface['name']}")
            print(f"   IP: {interface['ip_address']}")
            print(f"   –ü–æ–¥—Å–µ—Ç—å: {interface['subnet']}")
            print("-" * 40)
        
        print(f"0. –í—Å–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã (0.0.0.0) - –¥–æ—Å—Ç—É–ø —Å –ª—é–±–æ–≥–æ IP –∫–æ–º–ø—å—é—Ç–µ—Ä–∞")
        print("=" * 60)
        print("üí° –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Ç–æ–ª—å–∫–æ –≤ —ç—Ç–æ–π —Å–µ—Ç–∏")
        print("üí° –ò–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ 0 –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ —Å–æ –≤—Å–µ—Ö —Å–µ—Ç–µ–≤—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤")
        
        while True:
            try:
                choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å (0-{}): ".format(len(interfaces)))
                choice = int(choice)
                
                if choice == 0:
                    return "0.0.0.0"
                elif 1 <= choice <= len(interfaces):
                    selected_interface = interfaces[choice - 1]
                    return selected_interface['ip_address']
                else:
                    print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            except ValueError:
                print("‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")
            except KeyboardInterrupt:
                print("\nüõë –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
                sys.exit(0)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤: {e}")
        return "0.0.0.0"

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    print("=" * 60)
    print("üöÄ –õ–û–ö–ê–õ–¨–ù–´–ô –ó–ê–ü–£–°–ö –°–ï–¢–ï–í–û–ì–û –ú–û–ù–ò–¢–û–†–ê")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    try:
        import flask
        import flask_sqlalchemy
        import flask_login
        import flask_socketio
        import ping3
        import netifaces
        print("‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    except ImportError as e:
        print(f"‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å: {e}")
        print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥–æ–π:")
        print("   pip install flask flask-sqlalchemy flask-login flask-socketio ping3 netifaces apscheduler")
        sys.exit(1)
    
    # –í—ã–±–æ—Ä –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∞–º –≤—ã–±–∏—Ä–∞–µ—Ç —Å–µ—Ç—å)
    host_ip = select_interface()
    port = int(os.environ.get('APP_PORT', 8247))
    
    # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    if host_ip != "0.0.0.0":
        print(f"‚úÖ –í—ã–±—Ä–∞–Ω –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: {host_ip}")
        print(f"üåê –°–µ—Ä–≤–µ—Ä –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –≤ —ç—Ç–æ–π —Å–µ—Ç–∏")
    else:
        print("‚úÖ –í—ã–±—Ä–∞–Ω—ã –≤—Å–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã")
        print("üåê –°–µ—Ä–≤–µ—Ä –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –≤—Å–µ—Ö —Å–µ—Ç–µ–≤—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞—Ö")
    
    print("\n" + "=" * 60)
    print("üîó –ó–ê–ü–£–°–ö –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø")
    print("=" * 60)
    if host_ip == "0.0.0.0":
        print(f"üåê –î–æ—Å—Ç—É–ø: http://localhost:{port}")
        print(f"üåê –ò–ª–∏ —á–µ—Ä–µ–∑ –ª—é–±–æ–π IP —ç—Ç–æ–≥–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É {port}")
    else:
        print(f"üåê –î–æ—Å—Ç—É–ø: http://{host_ip}:{port}")
        print(f"üåê –¢–æ–ª—å–∫–æ –¥–ª—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –≤ —Å–µ—Ç–∏ {host_ip}")
    print("=" * 60)
    print("üìã –§—É–Ω–∫—Ü–∏–∏:")
    print("   ‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ IP –∞–¥—Ä–µ—Å–æ–≤")
    print("   ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–∏–Ω–≥")
    print("   ‚Ä¢ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
    print("   ‚Ä¢ –≠–∫—Å–ø–æ—Ä—Ç –≤ Excel")
    print("   ‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏")
    print("=" * 60)
    print("üîß –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    print("=" * 60)
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        with app.app_context():
            from app import db
            db.create_all()
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
            
            # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è admin, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
            from models import User, UserRole
            admin_user = User.query.filter_by(username='admin').first()
            if not admin_user:
                admin_user = User(username='admin', role=UserRole.ADMIN)
                admin_user.set_password('admin123')
                admin_user.force_password_change = True
                db.session.add(admin_user)
                db.session.commit()
                print("‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin —Å –ø–∞—Ä–æ–ª–µ–º admin123")
            
        # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        socketio.run(app, host=host_ip, port=port, debug=True)
        
    except KeyboardInterrupt:
        print("\nüõë –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {e}")
        print(f"üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø–æ—Ä—Ç {port} —Å–≤–æ–±–æ–¥–µ–Ω")
        sys.exit(1)

if __name__ == "__main__":
    main()