#!/usr/bin/env python3
"""
–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏ —Å—Ç–æ–π–∫–∏—Ö –∫–ª—é—á–µ–π –¥–ª—è —Å–µ—Ç–µ–≤–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∞
"""

import secrets
import string
import os
from datetime import datetime

def generate_session_key(length=64):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –Ω–∞–¥–µ–∂–Ω—ã–π –∫–ª—é—á –¥–ª—è —Å–µ—Å—Å–∏–π"""
    alphabet = string.ascii_letters + string.digits + '_-'
    return ''.join(secrets.choice(alphabet) for _ in range(length))

def generate_secret_key(length=32):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á –≤ hex —Ñ–æ—Ä–º–∞—Ç–µ"""
    return secrets.token_hex(length)

def generate_database_password(length=16):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –Ω–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    alphabet = string.ascii_letters + string.digits + '!@#$%^&*'
    return ''.join(secrets.choice(alphabet) for _ in range(length))

def create_env_file():
    """–°–æ–∑–¥–∞–µ—Ç —Ñ–∞–π–ª .env —Å –Ω–æ–≤—ã–º–∏ –∫–ª—é—á–∞–º–∏"""
    session_key = generate_session_key()
    secret_key = generate_secret_key()
    db_password = generate_database_password()
    
    env_content = f"""# Network Monitor - Environment Configuration
# Generated on {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}

# Database Configuration
DATABASE_URL=sqlite:///network_monitor.db
# For PostgreSQL: postgresql://username:{db_password}@localhost/network_monitor

# Security Keys
SESSION_SECRET={session_key}
SECRET_KEY={secret_key}

# Flask Settings
FLASK_ENV=development
FLASK_DEBUG=true

# Application Settings
APP_PORT=8247

# Optional: Database Password (for PostgreSQL)
DB_PASSWORD={db_password}

# Optional: JWT Secret (for API tokens)
JWT_SECRET={generate_secret_key()}

# Note: Keep this file secure and never commit it to version control!
"""
    
    with open('.env', 'w', encoding='utf-8') as f:
        f.write(env_content)
    
    return {
        'session_key': session_key,
        'secret_key': secret_key,
        'db_password': db_password
    }

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("=" * 60)
    print("üîê –ì–ï–ù–ï–†–ê–¢–û–† –ö–õ–Æ–ß–ï–ô –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ .env
    if os.path.exists('.env'):
        response = input("–§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å? (y/N): ")
        if response.lower() != 'y':
            print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
            return
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª—é—á–∏
    print("üîß –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤—ã—Ö –∫–ª—é—á–µ–π...")
    keys = create_env_file()
    
    print("‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω —Å –Ω–æ–≤—ã–º–∏ –∫–ª—é—á–∞–º–∏")
    print("=" * 60)
    print("üîë –°–ì–ï–ù–ï–†–ò–†–û–í–ê–ù–ù–´–ï –ö–õ–Æ–ß–ò:")
    print("=" * 60)
    print(f"Session Key: {keys['session_key'][:20]}...")
    print(f"Secret Key:  {keys['secret_key'][:20]}...")
    print(f"DB Password: {keys['db_password']}")
    print("=" * 60)
    print("‚ö†Ô∏è  –í–ê–ñ–ù–û:")
    print("‚Ä¢ –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–∏ –∫–ª—é—á–∏ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ")
    print("‚Ä¢ –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø—É–±–ª–∏–∫—É–π—Ç–µ –∏—Ö –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –¥–æ—Å—Ç—É–ø–µ")
    print("‚Ä¢ –ù–µ –¥–æ–±–∞–≤–ª—è–π—Ç–µ .env —Ñ–∞–π–ª –≤ —Å–∏—Å—Ç–µ–º—É –∫–æ–Ω—Ç—Ä–æ–ª—è –≤–µ—Ä—Å–∏–π")
    print("‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–∑–Ω—ã–µ –∫–ª—é—á–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º .gitignore –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if not os.path.exists('.gitignore'):
        with open('.gitignore', 'w') as f:
            f.write("# Environment files\n.env\n.env.local\n.env.production\n")
        print("‚úÖ –°–æ–∑–¥–∞–Ω .gitignore —Ñ–∞–π–ª")

if __name__ == "__main__":
    main()